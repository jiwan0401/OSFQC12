<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OSF Link - 오뚜기SF 품질플랫폼</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/umd/lucide.js"></script>
    <style>
        .hide { display: none !important; }
        .signature-input {
            font-size: 1.125rem;
            font-weight: 500;
            text-align: center;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-slate-50 to-blue-50 min-h-screen">
    
    <!-- 로그인 화면 -->
    <div id="loginScreen" class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex flex-col justify-center items-center px-8">
        <div class="w-full max-w-md">
            <div class="text-center mb-12">
                <div class="w-20 h-20 bg-gradient-to-br from-slate-600 to-blue-600 rounded-2xl mx-auto mb-6 flex items-center justify-center">
                    <i data-lucide="book-open" class="w-10 h-10 text-white"></i>
                </div>
                <h1 class="text-4xl font-bold text-slate-800 mb-2">OSF Link</h1>
                <p class="text-slate-500">오뚜기SF 품질플랫폼</p>
            </div>
            
            <div class="bg-white rounded-2xl shadow-xl p-8 space-y-6">
                <input
                    type="text"
                    id="employeeId"
                    placeholder="사번"
                    class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-800 bg-white focus:border-blue-400 focus:outline-none transition-colors"
                />
                <input
                    type="password"
                    id="password"
                    placeholder="패스워드"
                    class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-800 bg-white focus:border-blue-400 focus:outline-none transition-colors"
                />
                <button
                    onclick="handleLogin()"
                    class="w-full bg-gradient-to-r from-slate-600 to-blue-600 text-white py-3 rounded-xl hover:from-slate-700 hover:to-blue-700 transition-all duration-200 transform hover:scale-[1.02]"
                >
                    로그인
                </button>
            </div>
            
            <div class="mt-6 text-center">
                <p class="text-sm text-slate-500 mb-2">테스트 계정:</p>
                <p class="text-xs text-slate-400">관리자: K2020004 / 일반사용자: 아무 사번</p>
            </div>
        </div>
    </div>

    <!-- 메인 화면 -->
    <div id="mainScreen" class="hide min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div class="bg-gradient-to-r from-slate-700 to-blue-700 text-white py-6 px-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <div class="w-10 h-10 bg-white bg-opacity-20 rounded-lg flex items-center justify-center">
                        <i data-lucide="book-open" class="w-6 h-6 text-white"></i>
                    </div>
                    <div>
                        <h1 class="text-2xl font-bold">OSF Link</h1>
                        <p id="adminMode" class="text-sm text-white opacity-80 hide">관리자 모드</p>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <button id="saveAllBtn" onclick="saveAllFiles()" class="hide bg-green-500 hover:bg-green-600 px-3 py-2 rounded-lg transition-colors flex items-center space-x-2">
                        <i data-lucide="save" class="w-4 h-4"></i>
                        <span class="text-sm">모두 저장</span>
                    </button>
                    <div id="notificationBell" class="hide relative">
                        <i data-lucide="bell" class="w-6 h-6 text-white"></i>
                        <div id="notificationCount" class="absolute -top-2 -right-2 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center">
                            <span class="text-xs text-white">0</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div id="notifications" class="p-6 pb-0"></div>
        
        <div class="p-6">
            <div class="grid grid-cols-1 gap-4">
                <div class="bg-white rounded-2xl shadow-md p-6 cursor-pointer hover:shadow-lg transition-all duration-200 transform hover:scale-[1.02] border border-slate-100" onclick="showScreen('education')">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="calendar" class="w-6 h-6 text-blue-600"></i>
                            </div>
                            <div>
                                <span class="text-lg font-semibold text-slate-800">월별교육</span>
                                <p class="text-sm text-slate-500">교육과정 및 퀴즈</p>
                            </div>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div class="bg-white rounded-2xl shadow-md p-6 cursor-pointer hover:shadow-lg transition-all duration-200 transform hover:scale-[1.02] border border-slate-100" onclick="showScreen('notice')">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-gradient-to-br from-slate-100 to-slate-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="message-square" class="w-6 h-6 text-slate-600"></i>
                            </div>
                            <div>
                                <span class="text-lg font-semibold text-slate-800">공지사항</span>
                                <p class="text-sm text-slate-500">중요한 공지사항<span id="noticeCount"></span></p>
                            </div>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div class="bg-white rounded-2xl shadow-md p-6 cursor-pointer hover:shadow-lg transition-all duration-200 transform hover:scale-[1.02] border border-slate-100" onclick="showScreen('suggestion')">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-gradient-to-br from-green-100 to-green-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="file-text" class="w-6 h-6 text-green-600"></i>
                            </div>
                            <div>
                                <span class="text-lg font-semibold text-slate-800">식품안전 및 품질개선 건의함</span>
                                <p class="text-sm text-slate-500">개선사항 제안하기</p>
                            </div>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div class="bg-white rounded-2xl shadow-md p-6 cursor-pointer hover:shadow-lg transition-all duration-200 transform hover:scale-[1.02] border border-slate-100" onclick="showScreen('settings')">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-gradient-to-br from-purple-100 to-purple-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="settings" class="w-6 h-6 text-purple-600"></i>
                            </div>
                            <div>
                                <span class="text-lg font-semibold text-slate-800">설정</span>
                                <p class="text-sm text-slate-500">프로필 및 앱 설정</p>
                            </div>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div id="userManagementCard" class="hide bg-white rounded-2xl shadow-md p-6 cursor-pointer hover:shadow-lg transition-all duration-200 transform hover:scale-[1.02] border border-orange-100" onclick="showScreen('userManagement')">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-gradient-to-br from-orange-100 to-orange-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="user" class="w-6 h-6 text-orange-600"></i>
                            </div>
                            <div>
                                <span class="text-lg font-semibold text-slate-800">사용자 관리</span>
                                <p class="text-sm text-slate-500">진도 현황 및 퀴즈 점수 확인</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <span class="text-xs bg-orange-100 text-orange-700 px-2 py-1 rounded-full">관리자</span>
                            <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 교육 화면 -->
    <div id="educationScreen" class="hide min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div class="bg-gradient-to-r from-slate-700 to-blue-700 text-white py-4 px-6 flex items-center justify-between">
            <div class="flex items-center">
                <button onclick="showScreen('main')" class="mr-4 text-white hover:text-slate-200 transition-colors">←</button>
                <div class="flex items-center space-x-3">
                    <i data-lucide="calendar" class="w-6 h-6 text-white"></i>
                    <h1 class="text-2xl font-bold">월별교육</h1>
                </div>
            </div>
            <button id="saveAllBtnEducation" onclick="saveAllFiles()" class="hide bg-green-500 hover:bg-green-600 px-4 py-2 rounded-lg transition-colors flex items-center space-x-2">
                <i data-lucide="save" class="w-4 h-4"></i>
                <span>모두 저장</span>
            </button>
        </div>
        
        <div class="p-6">
            <div id="educationList" class="space-y-4"></div>
        </div>
    </div>

    <!-- 공지사항 화면 -->
    <div id="noticeScreen" class="hide min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div class="bg-gradient-to-r from-slate-700 to-blue-700 text-white py-4 px-6 flex items-center justify-between">
            <div class="flex items-center">
                <button onclick="showScreen('main')" class="mr-4 text-white hover:text-slate-200 transition-colors">←</button>
                <div class="flex items-center space-x-3">
                    <i data-lucide="message-square" class="w-6 h-6 text-white"></i>
                    <h1 class="text-2xl font-bold">공지사항</h1>
                </div>
            </div>
            <button id="noticeFormBtn" onclick="toggleNoticeForm()" class="hide bg-white bg-opacity-20 hover:bg-opacity-30 px-4 py-2 rounded-lg transition-colors">
                작성
            </button>
        </div>
        
        <div class="p-6">
            <div id="noticeForm" class="hide bg-white rounded-2xl shadow-md p-6 mb-6 border border-slate-100">
                <h3 class="text-lg font-semibold text-slate-800 mb-4">공지사항 작성</h3>
                <input
                    type="text"
                    id="noticeTitle"
                    placeholder="제목을 입력하세요"
                    class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-800 bg-white focus:border-blue-400 focus:outline-none transition-colors mb-4"
                />
                <textarea
                    id="noticeContent"
                    placeholder="내용을 입력하세요"
                    rows="4"
                    class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-800 bg-white focus:border-blue-400 focus:outline-none transition-colors mb-4"
                ></textarea>
                <button onclick="addNotice()" class="bg-gradient-to-r from-blue-500 to-blue-600 text-white px-6 py-2 rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all">
                    등록
                </button>
            </div>
            <div id="noticeList"></div>
        </div>
    </div>

    <!-- 건의함 화면 -->
    <div id="suggestionScreen" class="hide min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div class="bg-gradient-to-r from-slate-700 to-blue-700 text-white py-4 px-6 flex items-center">
            <button onclick="showScreen('main')" class="mr-4 text-white hover:text-slate-200 transition-colors">←</button>
            <div class="flex items-center space-x-3">
                <i data-lucide="file-text" class="w-6 h-6 text-white"></i>
                <h1 class="text-2xl font-bold">식품안전 및 품질개선 건의함</h1>
            </div>
        </div>
        
        <div class="p-6">
            <div class="bg-white rounded-2xl shadow-md p-8 text-center border border-slate-100">
                <div class="w-16 h-16 bg-gradient-to-br from-green-100 to-green-200 rounded-full mx-auto mb-6 flex items-center justify-center">
                    <i data-lucide="external-link" class="w-8 h-8 text-green-600"></i>
                </div>
                <h3 class="text-xl font-semibold text-slate-800 mb-4">건의사항을 작성해주세요</h3>
                <p class="text-slate-500 mb-6">Google Form을 통해 건의사항을 제출하실 수 있습니다.</p>
                <button onclick="openGoogleForm()" class="bg-gradient-to-r from-green-500 to-green-600 text-white px-8 py-3 rounded-xl hover:from-green-600 hover:to-green-700 transition-all duration-200 transform hover:scale-105 flex items-center space-x-2 mx-auto">
                    <i data-lucide="external-link" class="w-5 h-5"></i>
                    <span>건의함 열기</span>
                </button>
            </div>
        </div>
    </div>

    <!-- 설정 화면 -->
    <div id="settingsScreen" class="hide min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div class="bg-gradient-to-r from-slate-700 to-blue-700 text-white py-4 px-6 flex items-center">
            <button onclick="showScreen('main')" class="mr-4 text-white hover:text-slate-200 transition-colors">←</button>
            <div class="flex items-center space-x-3">
                <i data-lucide="settings" class="w-6 h-6 text-white"></i>
                <h1 class="text-2xl font-bold">설정</h1>
            </div>
        </div>
        
        <div class="p-6">
            <div class="space-y-4">
                <div class="bg-white rounded-2xl shadow-md p-5 cursor-pointer hover:shadow-lg transition-all duration-200 border border-slate-100">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-10 h-10 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="user" class="w-5 h-5 text-blue-600"></i>
                            </div>
                            <span class="text-lg font-medium text-slate-800">내 프로필</span>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div class="bg-white rounded-2xl shadow-md p-5 cursor-pointer hover:shadow-lg transition-all duration-200 border border-slate-100">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-10 h-10 bg-gradient-to-br from-yellow-100 to-yellow-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="bell" class="w-5 h-5 text-yellow-600"></i>
                            </div>
                            <span class="text-lg font-medium text-slate-800">알림설정</span>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div class="bg-white rounded-2xl shadow-md p-5 cursor-pointer hover:shadow-lg transition-all duration-200 border border-slate-100">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-10 h-10 bg-gradient-to-br from-red-100 to-red-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="lock" class="w-5 h-5 text-red-600"></i>
                            </div>
                            <span class="text-lg font-medium text-slate-800">암호잠금</span>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>

                <div id="googleFormSettings" class="hide bg-white rounded-2xl shadow-md p-5 border border-slate-100">
                    <div class="flex items-center space-x-4 mb-4">
                        <div class="w-10 h-10 bg-gradient-to-br from-green-100 to-green-200 rounded-xl flex items-center justify-center">
                            <i data-lucide="external-link" class="w-5 h-5 text-green-600"></i>
                        </div>
                        <span class="text-lg font-medium text-slate-800">건의함 링크 설정</span>
                    </div>
                    <input
                        type="url"
                        id="googleFormLink"
                        value="https://forms.google.com/"
                        placeholder="Google Form 링크를 입력하세요"
                        class="w-full px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-700 bg-slate-50 focus:border-blue-400 focus:outline-none transition-colors"
                    />
                </div>

                <div class="bg-white rounded-2xl shadow-md p-5 cursor-pointer hover:shadow-lg transition-all duration-200 border border-slate-100" onclick="handleLogout()">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="w-10 h-10 bg-gradient-to-br from-gray-100 to-gray-200 rounded-xl flex items-center justify-center">
                                <i data-lucide="log-out" class="w-5 h-5 text-gray-600"></i>
                            </div>
                            <span class="text-lg font-medium text-slate-800">로그아웃</span>
                        </div>
                        <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 사용자 관리 화면 -->
    <div id="userManagementScreen" class="hide min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
        <div class="bg-gradient-to-r from-slate-700 to-blue-700 text-white py-4 px-6 flex items-center">
            <button onclick="showScreen('main')" class="mr-4 text-white hover:text-slate-200 transition-colors">←</button>
            <div class="flex items-center space-x-3">
                <i data-lucide="user" class="w-6 h-6 text-white"></i>
                <h1 class="text-2xl font-bold">사용자 관리</h1>
                <span class="text-sm bg-white bg-opacity-20 px-2 py-1 rounded">관리자 전용</span>
            </div>
        </div>
        
        <div class="p-6">
            <div id="userProgressList" class="grid grid-cols-1 gap-4"></div>
        </div>
    </div>

    <!-- 서명 모달 -->
    <div id="signatureModal" class="hide fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div class="bg-white rounded-2xl shadow-2xl w-full max-w-md">
            <div class="p-6">
                <div class="text-center mb-6">
                    <div class="w-16 h-16 bg-gradient-to-br from-green-100 to-green-200 rounded-full mx-auto mb-4 flex items-center justify-center">
                        <i data-lucide="user" class="w-8 h-8 text-green-600"></i>
                    </div>
                    <h3 class="text-xl font-semibold text-slate-800 mb-2">교육 완료 서명</h3>
                    <p id="signatureMonthText" class="text-sm text-slate-600"></p>
                </div>
                
                <div class="mb-6">
                    <label class="block text-sm font-medium text-slate-700 mb-2">서명 (이름을 입력해주세요)</label>
                    <input
                        type="text"
                        id="signatureInput"
                        placeholder="홍길동"
                        class="signature-input w-full px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-800 bg-white focus:border-green-400 focus:outline-none transition-colors"
                    />
                </div>
                
                <div class="flex space-x-3">
                    <button onclick="closeSignatureModal()" class="flex-1 px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-600 hover:bg-slate-50 transition-colors">
                        취소
                    </button>
                    <button onclick="saveSignature()" class="flex-1 px-4 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl hover:from-green-600 hover:to-green-700 transition-all">
                        서명 완료
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- 퀴즈 모달 -->
    <div id="quizModal" class="hide fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div class="bg-white rounded-2xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-auto">
            <div class="p-6">
                <div class="text-center mb-6">
                    <div class="w-16 h-16 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full mx-auto mb-4 flex items-center justify-center">
                        <i data-lucide="help-circle" class="w-8 h-8 text-blue-600"></i>
                    </div>
                    <h3 id="quizTitle" class="text-xl font-semibold text-slate-800 mb-2"></h3>
                    <div id="quizScore" class="hide text-lg font-bold"></div>
                </div>
                
                <div id="quizQuestions" class="space-y-6"></div>
                
                <div class="flex space-x-3 mt-6">
                    <button onclick="closeQuiz()" class="flex-1 px-4 py-3 border-2 border-slate-200 rounded-xl text-slate-600 hover:bg-slate-50 transition-colors">
                        <span id="quizCloseText">취소</span>
                    </button>
                    <button id="quizSubmitBtn" onclick="submitQuiz()" class="flex-1 px-4 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl hover:from-blue-600 hover:to-blue-700 transition-all">
                        제출하기
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // 전역 변수
        let currentUser = '';
        let isAdmin = false;
        let currentScreen = 'login';
        let expandedMonth = null;
        let notifications = [];
        let notices = [];
        let uploadedFiles = {};
        let pendingFiles = {};
        let hasUnsavedChanges = false;
        let signatures = {};
        let currentSignatureMonth = null;
        let currentQuiz = null;
        let userAnswers = {};
        let quizSubmitted = false;
        let quizScore = 0;
        let googleFormLink = 'https://forms.google.com/';
        let userProgress = [];

        // 관리자 계정
        const adminAccounts = {
            'K2020004': { name: '송서현', password: '' },
            'K2024010': { name: '김지완', password: '' }
        };

        // 퀴즈 데이터
        const quizData = {
            7: {
                title: '2025년 07월 교육 자료 시험 문제',
                questions: [
                    {
                        id: 1,
                        question: '세척이 미흡하더라도 강력한 소독제 사용만으로 식중독균을 살멸시킬 수 있다.',
                        type: 'ox',
                        options: ['O', 'X'],
                        correctAnswer: 1,
                        explanation: '세척이 우선되어야 하며, 소독제만으로는 불충분합니다.'
                    },
                    {
                        id: 2,
                        question: '세척·소독제 사용 시 주의사항에 대한 설명 중 바르지 않은 것은?',
                        type: 'multiple',
                        options: [
                            '소독제의 희석액 제조 시, 다른 살균소독제와 혼합하여 소독효과성을 높인다.',
                            '반드시 세척제 및 소독제는 식약처 허가를 받은 제품만을 사용한다.',
                            '소독제 희석액은 즉시 사용하고 남은 희석액을 폐기한다.',
                            '신체에 소독제 원액 등이 묻지 않도록 마스크 등 개인 보호장비를 착용 후 사용한다.'
                        ],
                        correctAnswer: 0,
                        explanation: '다른 살균소독제와 혼합하면 위험할 수 있으므로 혼합하지 않아야 합니다.'
                    },
                    {
                        id: 3,
                        question: '세척제가 간류하지 않도록 음용에 적합한 물로 충분히 헹군 후 건조시켜야 한다.',
                        type: 'ox',
                        options: ['O', 'X'],
                        correctAnswer: 0,
                        explanation: '세척제 잔류를 방지하기 위해 충분한 헹굼과 건조가 필요합니다.'
                    },
                    {
                        id: 4,
                        question: '바닥용, 작업대용, 설비용 등 용도별로 구분하여 사용하며, 절대 겸용하여 사용하지 않는다.',
                        type: 'ox',
                        options: ['O', 'X'],
                        correctAnswer: 0,
                        explanation: '교차오염 방지를 위해 용도별로 구분하여 사용해야 합니다.'
                    }
                ]
            }
        };

        // 교육 데이터 생성
        function generateEducationData() {
            const currentYear = 2025;
            const months = [];
            for (let i = 1; i <= 12; i++) {
                const monthStr = i.toString().padStart(2, '0');
                const allCompleted = Math.random() > 0.3;
                months.push({
                    id: i,
                    title: `${currentYear}년 ${monthStr}월 교육`,
                    items: [
                        { id: 1, title: `${currentYear}년 ${monthStr}월 교육내용`, type: 'content', completed: allCompleted },
                        { id: 2, title: `${currentYear}년 ${monthStr}월 퀴즈`, type: 'quiz', completed: allCompleted }
                    ],
                    allCompleted: allCompleted
                });
            }
            return months;
        }

        const educationData = generateEducationData();

        // 알림 생성
        function generateNotifications() {
            const currentDate = new Date();
            const currentMonth = currentDate.getMonth() + 1;
            const currentDay = currentDate.getDate();
            
            const newNotifications = [];
            
            if (currentDay === 1) {
                newNotifications.push({
                    id: 1,
                    title: '월별 교육 알림',
                    message: `${currentMonth}월 교육이 시작되었습니다.`,
                    type: 'info'
                });
            }
            
            if (currentDay >= 15 && currentDay <= 17) {
                newNotifications.push({
                    id: 2,
                    title: '교육 진행 알림',
                    message: `${currentMonth}월 교육 진행 상황을 확인해주세요.`,
                    type: 'warning'
                });
            }
            
            return newNotifications;
        }

        // 사용자 진도 데이터 생성
        function generateUserProgressData() {
            const users = [
                { id: 'E001', name: '김철수', department: '생산부' },
                { id: 'E002', name: '이영희', department: '품질관리부' },
                { id: 'E003', name: '박민수', department: '연구개발부' },
                { id: 'E004', name: '최지현', department: '영업부' },
                { id: 'E005', name: '정수진', department: '생산부' }
            ];

            userProgress = users.map(user => ({
                ...user,
                completedModules: Math.floor(Math.random() * 12) + 1,
                totalModules: 12,
                quizScores: Array.from({ length: 12 }, () => Math.floor(Math.random() * 41) + 60),
                lastAccess: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000).toLocaleDateString()
            }));
        }

        // 로그인 처리
        function handleLogin() {
            const employeeId = document.getElementById('employeeId').value;
            const password = document.getElementById('password').value;
            
            if (employeeId && password) {
                currentUser = employeeId;
                isAdmin = adminAccounts[employeeId] ? true : false;
                showScreen('main');
                
                notifications = generateNotifications();
                updateNotifications();
                
                if (isAdmin) {
                    generateUserProgressData();
                    document.getElementById('adminMode').classList.remove('hide');
                    document.getElementById('userManagementCard').classList.remove('hide');
                    document.getElementById('noticeFormBtn').classList.remove('hide');
                    document.getElementById('googleFormSettings').classList.remove('hide');
                }
            }
        }

        // 로그아웃 처리
        function handleLogout() {
            currentUser = '';
            isAdmin = false;
            currentScreen = 'login';
            expandedMonth = null;
            notifications = [];
            notices = [];
            uploadedFiles = {};
            pendingFiles = {};
            hasUnsavedChanges = false;
            signatures = {};
            currentSignatureMonth = null;
            currentQuiz = null;
            userAnswers = {};
            quizSubmitted = false;
            quizScore = 0;
            userProgress = [];
            
            document.getElementById('employeeId').value = '';
            document.getElementById('password').value = '';
            document.getElementById('adminMode').classList.add('hide');
            document.getElementById('userManagementCard').classList.add('hide');
            document.getElementById('noticeFormBtn').classList.add('hide');
            document.getElementById('googleFormSettings').classList.add('hide');
            
            showScreen('login');
        }

        // 화면 전환
        function showScreen(screenName) {
            // 모든 화면 숨기기
            const screens = ['loginScreen', 'mainScreen', 'educationScreen', 'noticeScreen', 'suggestionScreen', 'settingsScreen', 'userManagementScreen'];
            screens.forEach(screen => {
                document.getElementById(screen).classList.add('hide');
            });
            
            // 선택된 화면 보이기
            document.getElementById(screenName + 'Screen').classList.remove('hide');
            currentScreen = screenName;
            
            // 화면별 초기화
            if (screenName === 'education') {
                renderEducationList();
            } else if (screenName === 'notice') {
                renderNoticeList();
            } else if (screenName === 'userManagement' && isAdmin) {
                renderUserProgress();
            }
        }

        // 알림 업데이트
        function updateNotifications() {
            const notificationContainer = document.getElementById('notifications');
            const notificationBell = document.getElementById('notificationBell');
            const notificationCount = document.getElementById('notificationCount');
            
            if (notifications.length > 0) {
                notificationBell.classList.remove('hide');
                notificationCount.textContent = notifications.length;
                
                notificationContainer.innerHTML = `
                    <div class="space-y-2">
                        ${notifications.map(notification => `
                            <div class="bg-blue-50 border-l-4 border-blue-400 p-4 rounded-r-lg">
                                <div class="flex items-center space-x-2">
                                    <i data-lucide="alert-circle" class="w-5 h-5 text-blue-600"></i>
                                    <span class="font-medium text-blue-800">${notification.title}</span>
                                </div>
                                <p class="text-blue-700 text-sm mt-1">${notification.message}</p>
                            </div>
                        `).join('')}
                    </div>
                `;
                lucide.createIcons();
            } else {
                notificationBell.classList.add('hide');
                notificationContainer.innerHTML = '';
            }
        }

        // 교육 목록 렌더링
        function renderEducationList() {
            const educationList = document.getElementById('educationList');
            educationList.innerHTML = educationData.map(month => {
                const isExpanded = expandedMonth === month.id;
                const uploadedCount = (uploadedFiles[month.id]?.length || 0);
                const pendingCount = (pendingFiles[month.id]?.length || 0);
                const totalFiles = uploadedCount + pendingCount;
                
                return `
                    <div class="bg-white rounded-2xl shadow-md border border-slate-100 overflow-hidden">
                        <div class="p-6 cursor-pointer hover:bg-slate-50 transition-colors" onclick="toggleMonth(${month.id})">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-4">
                                    <div class="w-12 h-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center">
                                        <i data-lucide="calendar" class="w-6 h-6 text-blue-600"></i>
                                    </div>
                                    <div>
                                        <h3 class="text-lg font-semibold text-slate-800">${month.title}</h3>
                                        <p class="text-sm text-slate-500">
                                            ${month.items.length}개 항목
                                            ${totalFiles > 0 ? ` • ${totalFiles}개 파일` : ''}
                                        </p>
                                    </div>
                                </div>
                                <i data-lucide="chevron-right" class="w-5 h-5 text-slate-400 transition-transform ${isExpanded ? 'rotate-90' : ''}"></i>
                            </div>
                        </div>
                        
                        ${isExpanded ? renderMonthDetails(month) : ''}
                    </div>
                `;
            }).join('');
            
            lucide.createIcons();
            updateSaveButtons();
        }

        // 월별 세부사항 렌더링
        function renderMonthDetails(month) {
            const uploadedFilesList = uploadedFiles[month.id] || [];
            const pendingFilesList = pendingFiles[month.id] || [];
            const signature = signatures[month.id];
            
            return `
                <div class="px-6 pb-6 space-y-3 border-t border-slate-100 pt-4">
                    ${isAdmin ? `
                        <div class="bg-blue-50 rounded-xl p-4 mb-4">
                            <div class="flex items-center justify-between mb-3">
                                <h4 class="text-sm font-medium text-blue-800">교육자료 관리</h4>
                                ${pendingFilesList.length > 0 ? `
                                    <button onclick="saveFiles(${month.id})" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded-lg text-sm flex items-center space-x-1 transition-colors">
                                        <i data-lucide="save" class="w-3 h-3"></i>
                                        <span>저장</span>
                                    </button>
                                ` : ''}
                            </div>
                            <input type="file" onchange="handleFileUpload(${month.id}, this.files[0])" class="block w-full text-sm text-slate-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100" />
                        </div>
                    ` : ''}

                    ${(uploadedFilesList.length > 0 || (pendingFilesList.length > 0 && isAdmin)) ? `
                        <div class="bg-slate-50 rounded-xl p-4 mb-4">
                            <h4 class="text-sm font-medium text-slate-700 mb-3 flex items-center">
                                <i data-lucide="file-text" class="w-4 h-4 mr-2"></i>
                                교육자료
                            </h4>
                            <div class="space-y-2">
                                ${uploadedFilesList.map(file => `
                                    <div class="flex items-center justify-between p-3 bg-white rounded-lg border border-slate-200">
                                        <div class="flex items-center space-x-3">
                                            <i data-lucide="file-text" class="w-4 h-4 text-blue-600"></i>
                                            <div>
                                                <span class="text-sm font-medium text-slate-700">${file.name}</span>
                                                <p class="text-xs text-slate-500">업로드: ${file.uploadDate}</p>
                                            </div>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <button onclick="downloadFile('${file.name}')" class="text-blue-600 hover:text-blue-700 p-1" title="다운로드">
                                                <i data-lucide="download" class="w-4 h-4"></i>
                                            </button>
                                            ${isAdmin ? `<button onclick="deleteFile(${month.id}, ${file.id})" class="text-red-500 hover:text-red-700 text-sm">삭제</button>` : ''}
                                        </div>
                                    </div>
                                `).join('')}
                                
                                ${isAdmin ? pendingFilesList.map(file => `
                                    <div class="flex items-center justify-between p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                                        <div class="flex items-center space-x-3">
                                            <i data-lucide="upload" class="w-4 h-4 text-yellow-600"></i>
                                            <div>
                                                <span class="text-sm font-medium text-slate-700">${file.name}</span>
                                                <p class="text-xs text-yellow-600">저장 대기중</p>
                                            </div>
                                        </div>
                                        <button onclick="deleteFile(${month.id}, ${file.id})" class="text-red-500 hover:text-red-700 text-sm">삭제</button>
                                    </div>
                                `).join('') : ''}
                            </div>
                        </div>
                    ` : ''}
                    
                    ${month.items.map(item => `
                        <div class="flex items-center justify-between py-3 px-4 bg-slate-50 rounded-xl cursor-pointer hover:bg-slate-100 transition-colors" onclick="${item.type === 'quiz' ? `startQuiz(${month.id})` : ''}">
                            <div class="flex items-center space-x-3">
                                <div class="w-8 h-8 rounded-lg flex items-center justify-center">
                                    <i data-lucide="${item.type === 'content' ? 'play' : 'help-circle'}" class="w-5 h-5 ${item.type === 'content' ? 'text-blue-600' : 'text-green-600'}"></i>
                                </div>
                                <span class="text-slate-700">${item.title}</span>
                            </div>
                            <div class="flex items-center space-x-2">
                                ${item.completed ? '<i data-lucide="check-circle" class="w-5 h-5 text-green-500"></i>' : '<div class="w-5 h-5 border-2 border-slate-300 rounded-full"></div>'}
                                <i data-lucide="chevron-right" class="w-4 h-4 text-slate-400"></i>
                            </div>
                        </div>
                    `).join('')}

                    ${month.allCompleted ? `
                        <div class="bg-green-50 rounded-xl p-4 mt-4">
                            <div class="flex items-center justify-between mb-3">
                                <h4 class="text-sm font-medium text-green-800 flex items-center">
                                    <i data-lucide="check-circle" class="w-4 h-4 mr-2"></i>
                                    교육 완료
                                </h4>
                            </div>
                            
                            ${signature ? `
                                <div class="space-y-3">
                                    <div class="bg-white rounded-lg p-3 border border-green-200">
                                        <div class="flex items-center justify-between mb-2">
                                            <span class="text-sm font-medium text-green-700">서명 완료</span>
                                            <span class="text-xs text-green-600">${signature.date} ${signature.time}</span>
                                        </div>
                                        <div class="bg-green-100 rounded p-2 mb-2">
                                            <span class="text-green-800 font-medium text-lg">${signature.signature}</span>
                                        </div>
                                        <div class="text-xs text-green-600">
                                            서명자: ${signature.employeeName} (${signature.employeeId})
                                        </div>
                                    </div>
                                    <button onclick="downloadCertificate(${month.id})" class="w-full bg-gradient-to-r from-green-500 to-green-600 text-white py-2 rounded-lg hover:from-green-600 hover:to-green-700 transition-all flex items-center justify-center space-x-2">
                                        <i data-lucide="download" class="w-4 h-4"></i>
                                        <span>수료증 다운로드</span>
                                    </button>
                                </div>
                            ` : `
                                <div class="text-center">
                                    <p class="text-sm text-green-700 mb-3">모든 교육과정을 완료하셨습니다!</p>
                                    <p class="text-xs text-green-600 mb-4">서명을 하시면 수료증을 발급받을 수 있습니다.</p>
                                    <button onclick="openSignatureModal(${month.id})" class="bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-2 rounded-lg hover:from-green-600 hover:to-green-700 transition-all flex items-center space-x-2 mx-auto">
                                        <i data-lucide="user" class="w-4 h-4"></i>
                                        <span>서명하기</span>
                                    </button>
                                </div>
                            `}
                        </div>
                    ` : ''}
                </div>
            `;
        }

        // 월 토글
        function toggleMonth(monthId) {
            expandedMonth = expandedMonth === monthId ? null : monthId;
            renderEducationList();
        }

        // 파일 업로드 처리
        function handleFileUpload(monthId, file) {
            if (!file) return;
            
            if (!pendingFiles[monthId]) {
                pendingFiles[monthId] = [];
            }
            
            pendingFiles[monthId].push({
                id: Date.now(),
                name: file.name,
                size: file.size,
                uploadDate: new Date().toLocaleDateString(),
                isPending: true
            });
            
            hasUnsavedChanges = true;
            renderEducationList();
        }

        // 개별 월 파일 저장
        function saveFiles(monthId) {
            const pending = pendingFiles[monthId] || [];
            const saved = pending.map(file => ({ ...file, isPending: false }));
            
            if (!uploadedFiles[monthId]) {
                uploadedFiles[monthId] = [];
            }
            uploadedFiles[monthId].push(...saved);
            
            pendingFiles[monthId] = [];
            
            const remainingPending = Object.values(pendingFiles).reduce((total, files) => total + files.length, 0);
            if (remainingPending === 0) {
                hasUnsavedChanges = false;
            }
            
            renderEducationList();
        }

        // 모든 파일 저장
        function saveAllFiles() {
            Object.keys(pendingFiles).forEach(monthId => {
                const pending = pendingFiles[monthId] || [];
                const saved = pending.map(file => ({ ...file, isPending: false }));
                
                if (!uploadedFiles[monthId]) {
                    uploadedFiles[monthId] = [];
                }
                uploadedFiles[monthId].push(...saved);
            });
            
            pendingFiles = {};
            hasUnsavedChanges = false;
            renderEducationList();
        }

        // 파일 삭제
        function deleteFile(monthId, fileId) {
            if (uploadedFiles[monthId]) {
                uploadedFiles[monthId] = uploadedFiles[monthId].filter(file => file.id !== fileId);
            }
            
            if (pendingFiles[monthId]) {
                pendingFiles[monthId] = pendingFiles[monthId].filter(file => file.id !== fileId);
                
                const totalPending = Object.values(pendingFiles).reduce((total, files) => total + files.length, 0);
                if (totalPending === 0) {
                    hasUnsavedChanges = false;
                }
            }
            
            renderEducationList();
        }

        // 파일 다운로드
        function downloadFile(fileName) {
            alert(`${fileName} 다운로드 기능은 실제 서버 연동 시 구현됩니다.`);
        }

        // 저장 버튼 업데이트
        function updateSaveButtons() {
            const saveAllBtn = document.getElementById('saveAllBtn');
            const saveAllBtnEducation = document.getElementById('saveAllBtnEducation');
            
            if (hasUnsavedChanges && isAdmin) {
                saveAllBtn?.classList.remove('hide');
                saveAllBtnEducation?.classList.remove('hide');
            } else {
                saveAllBtn?.classList.add('hide');
                saveAllBtnEducation?.classList.add('hide');
            }
        }

        // 서명 모달 열기
        function openSignatureModal(monthId) {
            currentSignatureMonth = monthId;
            const month = educationData.find(m => m.id === monthId);
            document.getElementById('signatureMonthText').textContent = 
                `${month.title} 교육을 완료하였음을 확인합니다.`;
            document.getElementById('signatureInput').value = '';
            document.getElementById('signatureModal').classList.remove('hide');
            lucide.createIcons();
        }

        // 서명 모달 닫기
        function closeSignatureModal() {
            document.getElementById('signatureModal').classList.add('hide');
            currentSignatureMonth = null;
            document.getElementById('signatureInput').value = '';
        }

        // 서명 저장
        function saveSignature() {
            const signatureData = document.getElementById('signatureInput').value.trim();
            
            if (signatureData && currentSignatureMonth) {
                const signatureInfo = {
                    signature: signatureData,
                    date: new Date().toLocaleDateString(),
                    time: new Date().toLocaleTimeString(),
                    employeeId: currentUser,
                    employeeName: adminAccounts[currentUser]?.name || signatureData
                };
                
                signatures[currentSignatureMonth] = signatureInfo;
                closeSignatureModal();
                renderEducationList();
            }
        }

        // 수료증 다운로드
        function downloadCertificate(monthId) {
            const month = educationData.find(m => m.id === monthId);
            const signature = signatures[monthId];
            
            if (month && signature) {
                alert(`${month.title} 수료증이 다운로드됩니다.\n서명자: ${signature.employeeName}\n완료일: ${signature.date}`);
            }
        }

        // 퀴즈 시작
        function startQuiz(monthId) {
            if (quizData[monthId]) {
                currentQuiz = monthId;
                userAnswers = {};
                quizSubmitted = false;
                quizScore = 0;
                
                document.getElementById('quizTitle').textContent = quizData[monthId].title;
                document.getElementById('quizScore').classList.add('hide');
                document.getElementById('quizSubmitBtn').classList.remove('hide');
                document.getElementById('quizCloseText').textContent = '취소';
                
                renderQuizQuestions();
                document.getElementById('quizModal').classList.remove('hide');
                lucide.createIcons();
            } else {
                alert('해당 월의 퀴즈가 준비되지 않았습니다.');
            }
        }

        // 퀴즈 문제 렌더링
        function renderQuizQuestions() {
            const questionsContainer = document.getElementById('quizQuestions');
            const questions = quizData[currentQuiz].questions;
            
            questionsContainer.innerHTML = questions.map((question, qIndex) => `
                <div class="bg-slate-50 rounded-xl p-4">
                    <div class="mb-4">
                        <h4 class="text-lg font-medium text-slate-800 mb-3">
                            ${qIndex + 1}. ${question.question}
                        </h4>
                    </div>
                    
                    <div class="space-y-2">
                        ${question.options.map((option, optIndex) => {
                            const isSelected = userAnswers[question.id] === optIndex;
                            const isCorrect = question.correctAnswer === optIndex;
                            const isWrong = quizSubmitted && isSelected && !isCorrect;
                            const showCorrect = quizSubmitted && isCorrect;
                            
                            let buttonClass = 'w-full text-left p-3 rounded-lg border-2 transition-all ';
                            if (quizSubmitted) {
                                if (showCorrect) {
                                    buttonClass += 'border-green-500 bg-green-50 text-green-700';
                                } else if (isWrong) {
                                    buttonClass += 'border-red-500 bg-red-50 text-red-700';
                                } else {
                                    buttonClass += 'border-slate-200 bg-white text-slate-600';
                                }
                            } else {
                                if (isSelected) {
                                    buttonClass += 'border-blue-500 bg-blue-50 text-blue-700';
                                } else {
                                    buttonClass += 'border-slate-200 bg-white text-slate-700 hover:border-blue-300 hover:bg-blue-50';
                                }
                            }
                            
                            return `
                                <button onclick="selectAnswer(${question.id}, ${optIndex})" ${quizSubmitted ? 'disabled' : ''} class="${buttonClass}">
                                    <div class="flex items-center space-x-3">
                                        <div class="w-6 h-6 rounded-full border-2 flex items-center justify-center ${
                                            quizSubmitted
                                                ? showCorrect
                                                    ? 'border-green-500 bg-green-500'
                                                    : isWrong
                                                    ? 'border-red-500 bg-red-500'
                                                    : 'border-slate-300'
                                                : isSelected
                                                ? 'border-blue-500 bg-blue-500'
                                                : 'border-slate-300'
                                        }">
                                            ${(isSelected || showCorrect) ? '<i data-lucide="check-circle" class="w-4 h-4 text-white"></i>' : ''}
                                        </div>
                                        <span class="font-medium">
                                            ${question.type === 'multiple' ? `${optIndex + 1}` : optIndex + 1}. ${option}
                                        </span>
                                    </div>
                                </button>
                            `;
                        }).join('')}
                    </div>
                    
                    ${quizSubmitted ? `
                        <div class="mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200">
                            <div class="flex items-start space-x-2">
                                <i data-lucide="alert-circle" class="w-5 h-5 text-blue-600 mt-0.5"></i>
                                <div>
                                    <span class="text-sm font-medium text-blue-800">해설:</span>
                                    <p class="text-sm text-blue-700 mt-1">${question.explanation}</p>
                                </div>
                            </div>
                        </div>
                    ` : ''}
                </div>
            `).join('');
            
            lucide.createIcons();
        }

        // 답안 선택
        function selectAnswer(questionId, answerIndex) {
            if (!quizSubmitted) {
                userAnswers[questionId] = answerIndex;
                renderQuizQuestions();
                
                // 제출 버튼 활성화 확인
                const questions = quizData[currentQuiz].questions;
                const submitBtn = document.getElementById('quizSubmitBtn');
                if (Object.keys(userAnswers).length >= questions.length) {
                    submitBtn.disabled = false;
                    submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                } else {
                    submitBtn.disabled = true;
                    submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
                }
            }
        }

        // 퀴즈 제출 및 채점
        function submitQuiz() {
            if (!currentQuiz || !quizData[currentQuiz]) return;
            
            const questions = quizData[currentQuiz].questions;
            let correctCount = 0;
            
            questions.forEach(question => {
                if (userAnswers[question.id] === question.correctAnswer) {
                    correctCount++;
                }
            });
            
            quizScore = Math.round((correctCount / questions.length) * 100);
            quizSubmitted = true;
            
            const scoreElement = document.getElementById('quizScore');
            scoreElement.textContent = `점수: ${quizScore}점`;
            scoreElement.className = `text-lg font-bold ${
                quizScore >= 80 ? 'text-green-600' : 
                quizScore >= 70 ? 'text-yellow-600' : 'text-red-600'
            }`;
            scoreElement.classList.remove('hide');
            
            document.getElementById('quizSubmitBtn').classList.add('hide');
            document.getElementById('quizCloseText').textContent = '닫기';
            
            renderQuizQuestions();
        }

        // 퀴즈 닫기
        function closeQuiz() {
            document.getElementById('quizModal').classList.add('hide');
            currentQuiz = null;
            userAnswers = {};
            quizSubmitted = false;
            quizScore = 0;
        }

        // 공지사항 폼 토글
        function toggleNoticeForm() {
            const form = document.getElementById('noticeForm');
            const btn = document.getElementById('noticeFormBtn');
            
            if (form.classList.contains('hide')) {
                form.classList.remove('hide');
                btn.textContent = '취소';
            } else {
                form.classList.add('hide');
                btn.textContent = '작성';
                document.getElementById('noticeTitle').value = '';
                document.getElementById('noticeContent').value = '';
            }
        }

        // 공지사항 추가
        function addNotice() {
            const title = document.getElementById('noticeTitle').value.trim();
            const content = document.getElementById('noticeContent').value.trim();
            
            if (title && content) {
                const notice = {
                    id: Date.now(),
                    title: title,
                    content: content,
                    date: new Date().toLocaleDateString(),
                    author: adminAccounts[currentUser]?.name || '관리자'
                };
                
                notices.unshift(notice);
                document.getElementById('noticeTitle').value = '';
                document.getElementById('noticeContent').value = '';
                toggleNoticeForm();
                renderNoticeList();
                updateNoticeCount();
            }
        }

        // 공지사항 삭제
        function deleteNotice(noticeId) {
            notices = notices.filter(notice => notice.id !== noticeId);
            renderNoticeList();
            updateNoticeCount();
        }

        // 공지사항 목록 렌더링
        function renderNoticeList() {
            const noticeList = document.getElementById('noticeList');
            
            if (notices.length > 0) {
                noticeList.innerHTML = `
                    <div class="space-y-4">
                        ${notices.map(notice => `
                            <div class="bg-white rounded-2xl shadow-md p-6 border border-slate-100">
                                <div class="flex items-start justify-between mb-3">
                                    <h3 class="text-lg font-semibold text-slate-800">${notice.title}</h3>
                                    ${isAdmin ? `
                                        <button onclick="deleteNotice(${notice.id})" class="text-red-500 hover:text-red-700 text-sm">
                                            삭제
                                        </button>
                                    ` : ''}
                                </div>
                                <p class="text-slate-600 mb-3 whitespace-pre-wrap">${notice.content}</p>
                                <div class="text-sm text-slate-400">
                                    작성자: ${notice.author} | 작성일: ${notice.date}
                                </div>
                            </div>
                        `).join('')}
                    </div>
                `;
            } else {
                noticeList.innerHTML = `
                    <div class="bg-white rounded-2xl shadow-md p-8 text-center border border-slate-100">
                        <i data-lucide="message-square" class="w-16 h-16 text-slate-300 mx-auto mb-4"></i>
                        <span class="text-slate-500 text-lg">공지사항이 없습니다.</span>
                    </div>
                `;
            }
            
            lucide.createIcons();
        }

        // 공지사항 수 업데이트
        function updateNoticeCount() {
            const noticeCount = document.getElementById('noticeCount');
            if (notices.length > 0) {
                noticeCount.textContent = ` (${notices.length})`;
            } else {
                noticeCount.textContent = '';
            }
        }

        // Google Form 열기
        function openGoogleForm() {
            const link = document.getElementById('googleFormLink')?.value || googleFormLink;
            window.open(link, '_blank');
        }

        // 사용자 진도 렌더링
        function renderUserProgress() {
            const userProgressList = document.getElementById('userProgressList');
            
            userProgressList.innerHTML = userProgress.map(user => `
                <div class="bg-white rounded-2xl shadow-md p-6 border border-slate-100">
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center">
                                <i data-lucide="user" class="w-6 h-6 text-blue-600"></i>
                            </div>
                            <div>
                                <h3 class="text-lg font-semibold text-slate-800">${user.name}</h3>
                                <p class="text-sm text-slate-500">${user.department} | ${user.id}</p>
                            </div>
                        </div>
                        <div class="text-right">
                            <div class="text-sm text-slate-500">마지막 접속</div>
                            <div class="text-sm font-medium text-slate-700">${user.lastAccess}</div>
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <div class="flex items-center justify-between mb-2">
                            <span class="text-sm font-medium text-slate-700">교육 진도율</span>
                            <span class="text-sm text-slate-500">${user.completedModules}/${user.totalModules}</span>
                        </div>
                        <div class="w-full bg-slate-200 rounded-full h-2">
                            <div class="bg-gradient-to-r from-blue-500 to-blue-600 h-2 rounded-full transition-all" style="width: ${(user.completedModules / user.totalModules) * 100}%"></div>
                        </div>
                        <div class="text-xs text-slate-500 mt-1">
                            ${Math.round((user.completedModules / user.totalModules) * 100)}% 완료
                        </div>
                    </div>
                    
                    <div>
                        <span class="text-sm font-medium text-slate-700 mb-2 block">퀴즈 점수 현황</span>
                        <div class="grid grid-cols-6 gap-2">
                            ${user.quizScores.slice(0, user.completedModules).map((score, index) => `
                                <div class="text-center py-2 px-1 rounded-lg text-xs font-medium ${
                                    score >= 80 ? 'bg-green-100 text-green-700' :
                                    score >= 70 ? 'bg-yellow-100 text-yellow-700' :
                                    'bg-red-100 text-red-700'
                                }">
                                    ${index + 1}월<br/>${score}점
                                </div>
                            `).join('')}
                            ${Array.from({ length: user.totalModules - user.completedModules }, (_, index) => `
                                <div class="text-center py-2 px-1 rounded-lg text-xs bg-slate-100 text-slate-400">
                                    ${user.completedModules + index + 1}월<br/>-
                                </div>
                            `).join('')}
                        </div>
                        <div class="text-xs text-slate-500 mt-2">
                            평균 점수: ${user.quizScores.slice(0, user.completedModules).length > 0 
                                ? Math.round(user.quizScores.slice(0, user.completedModules).reduce((a, b) => a + b, 0) / user.completedModules) 
                                : 0}점
                        </div>
                    </div>
                </div>
            `).join('');
            
            lucide.createIcons();
        }

        // 키보드 이벤트 처리
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
                if (currentScreen === 'login') {
                    handleLogin();
                }
            }
        });

        // 페이지 로드 시 아이콘 초기화
        document.addEventListener('DOMContentLoaded', function() {
            lucide.createIcons();
        });
    </script>
</body>
</html>
